/* eslint-disable 
    @typescript-eslint/no-use-before-define,
    no-var
*/
// Generated by CoffeeScript 1.12.7
(function () {
  var TrelloStorage,
    View,
    templates,
    track,
    extend = function (child, parent) {
      for (const key in parent) {
        if (hasProp.call(parent, key)) child[key] = parent[key];
      }
      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    },
    hasProp = {}.hasOwnProperty;

  TrelloStorage = require('@trello/storage').TrelloStorage;

  View = require('app/scripts/views/internal/view');

  templates = require('app/scripts/views/internal/templates');

  track = require('@trello/analytics').track;

  module.exports = (function (superClass) {
    extend(OrganizationLinkGAHelperView, superClass);

    function OrganizationLinkGAHelperView() {
      return OrganizationLinkGAHelperView.__super__.constructor.apply(
        this,
        arguments,
      );
    }

    OrganizationLinkGAHelperView.prototype.viewTitleKey =
      'link google apps domain';

    OrganizationLinkGAHelperView.prototype.events = {
      'click .js-link': 'link',
    };

    OrganizationLinkGAHelperView.prototype.render = function () {
      const data = this.model.toJSON();
      this.$el.html(
        templates.fill(
          require('app/scripts/views/templates/org_link_ga_helper'),
          data,
          {
            editable: this.model.editable(),
          },
        ),
      );
      return this;
    };

    OrganizationLinkGAHelperView.prototype.link = function () {
      track(
        'Organization View',
        'Members Page',
        'Google Apps Marketplace link',
      );
      if (TrelloStorage.isEnabled()) {
        TrelloStorage.set('idOrganizationLinking', this.model.id);
      }
    };

    return OrganizationLinkGAHelperView;
  })(View);
}.call(this));
