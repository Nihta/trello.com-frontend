// this component was automatically generated by IconGlyph.template.js
import React from 'react';
import { TestId } from '@trello/test-ids';

import { Icon, IconColor, IconSize } from '../src/components/Icon';

export interface GlyphProps {
  /**
   * A string that is applied as an aria attribute on the icon. Usually it
   * matches up with the display name of the icon
   * @default If no label is provided, it will fallback to the name of the icon
   */
  label?: string;
  /**
   * The color that the Icon should be rendered as.
   * @default @icon-default-color (#42526E)
   */
  color?: IconColor;
  /**
   * The size to render the Icon size.
   * @default "medium"
   */
  size?: IconSize;
  /**
   * A string that gets placed as a data attribute (data-test-id) onto the
   * Icon wrapper so that our
   * smoketest can properly target and test the component
   * @default undefined
   */
  testId?: TestId;
  // Escape hatches
  /**
   * ⚠️ DO NOT USE THIS PROP UNLESS YOU REALLY REALLY HAVE TO.
   *
   * Places a class name on the Icon (more specifically, the svg itself). This
   * is placed in addition to the classes already placed on the Icon. This is
   * placed directly onto the SVG via the glyph templates that are
   * generated by IconGlyph.template.js
   *
   * Please refrain from using this unless absolutely necessary.
   * @default undefined
   */
  dangerous_className?: string;
  /**
   * The switch for the icon to be centered in the dedicated space with padding around it.
   * Designed for cases when icon is not inline.
   */
  block?: boolean;
}

const StickerIconGlyph = () => {
  return (
    <svg
      width="24"
      height="24"
      role="presentation"
      focusable="false"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M11.9913 22C6.47244 21.9953 2 17.5199 2 12C2 6.47715 6.47715 2 12 2C17.5194 2 21.9944 6.47151 22 11.9896C22.0028 12.2553 21.8994 12.5149 21.7071 12.7071L12.7071 21.7071C12.5153 21.8989 12.2565 22.0023 11.9913 22ZM4 12C4 7.58172 7.58172 4 12 4C15.9888 4 19.2957 6.91917 19.901 10.7377C19.4642 10.6737 18.9449 10.625 18.375 10.625C16.7209 10.625 14.5466 11.0392 12.7929 12.7929C11.0392 14.5466 10.625 16.7209 10.625 18.375C10.625 18.9449 10.6737 19.4642 10.7377 19.901C6.91918 19.2957 4 15.9888 4 12ZM14.2071 14.2071C15.4534 12.9608 17.0292 12.625 18.375 12.625C18.5714 12.625 18.7609 12.6322 18.9412 12.6446L12.6446 18.9412C12.6322 18.7609 12.625 18.5714 12.625 18.375C12.625 17.0291 12.9608 15.4534 14.2071 14.2071Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const StickerIcon: React.FunctionComponent<GlyphProps> = (props) => {
  const { testId, dangerous_className, size, color, label, block } = props;
  return (
    <Icon
      testId={testId}
      size={size}
      dangerous_className={dangerous_className}
      color={color}
      block={block}
      label={label || 'StickerIcon'}
      glyph={StickerIconGlyph}
    />
  );
};
