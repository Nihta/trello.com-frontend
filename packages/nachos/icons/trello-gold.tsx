// this component was automatically generated by IconGlyph.template.js
import React from 'react';
import { TestId } from '@trello/test-ids';

import { Icon, IconColor, IconSize } from '../src/components/Icon';

export interface GlyphProps {
  /**
   * A string that is applied as an aria attribute on the icon. Usually it
   * matches up with the display name of the icon
   * @default If no label is provided, it will fallback to the name of the icon
   */
  label?: string;
  /**
   * The color that the Icon should be rendered as.
   * @default @icon-default-color (#42526E)
   */
  color?: IconColor;
  /**
   * The size to render the Icon size.
   * @default "medium"
   */
  size?: IconSize;
  /**
   * A string that gets placed as a data attribute (data-test-id) onto the
   * Icon wrapper so that our
   * smoketest can properly target and test the component
   * @default undefined
   */
  testId?: TestId;
  // Escape hatches
  /**
   * ⚠️ DO NOT USE THIS PROP UNLESS YOU REALLY REALLY HAVE TO.
   *
   * Places a class name on the Icon (more specifically, the svg itself). This
   * is placed in addition to the classes already placed on the Icon. This is
   * placed directly onto the SVG via the glyph templates that are
   * generated by IconGlyph.template.js
   *
   * Please refrain from using this unless absolutely necessary.
   * @default undefined
   */
  dangerous_className?: string;
  /**
   * The switch for the icon to be centered in the dedicated space with padding around it.
   * Designed for cases when icon is not inline.
   */
  block?: boolean;
}

const TrelloGoldIconGlyph = () => {
  return (
    <svg
      width="24"
      height="24"
      role="presentation"
      focusable="false"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M19.8646 9.00725C20.1042 8.77391 20.4062 8.65217 20.75 8.65217C21.4479 8.65217 22 9.18986 22 9.86957C22 10.5493 21.4479 11.087 20.75 11.087C20.5729 11.087 20.4062 11.0565 20.2604 10.9855C18.9167 14.1203 18.25 16.0174 18.25 16.6768V19H5.76042L5.75 16.6768C5.75 16.0174 5.07292 14.1304 3.72917 10.9957C3.58333 11.0565 3.42708 11.087 3.25 11.087C2.55208 11.087 2 10.5493 2 9.86957C2 9.18986 2.55208 8.65217 3.25 8.65217C3.94792 8.65217 4.5 9.18986 4.5 9.86957C4.5 10.1232 4.42708 10.3464 4.29167 10.5391C6.79167 12.1217 8.38542 12.913 9.08333 12.913C9.76042 12.913 10.6354 11.0768 11.6875 7.3942C11.1458 7.26232 10.75 6.78551 10.75 6.21739C10.75 5.53768 11.3021 5 12 5C12.6979 5 13.25 5.53768 13.25 6.21739C13.25 6.74493 12.9062 7.20145 12.4167 7.36377C12.8646 8.54058 13.2917 9.57536 13.8958 10.8333C14.1979 11.4623 14.4896 11.9696 14.7812 12.3449C15.0729 12.7203 15.3229 12.913 15.5417 12.913C16.2188 12.913 17.6146 12.142 19.75 10.6C19.5833 10.387 19.5 10.1435 19.5 9.86957C19.5 9.53478 19.625 9.24058 19.8646 9.00725ZM11.9896 17.1739C12.6979 17.1739 13.25 16.6261 13.25 15.9464C13.25 15.287 12.6979 14.7391 11.9896 14.7391C11.2917 14.7391 10.75 15.287 10.75 15.9464C10.75 16.6261 11.2917 17.1739 11.9896 17.1739ZM8.54168 17.1739C9.07293 17.1739 9.50001 16.7376 9.50001 16.2811C9.50001 15.7637 9.07293 15.3478 8.54168 15.3478C8.07293 15.3478 7.62501 15.7637 7.62501 16.2811C7.62501 16.7376 8.07293 17.1739 8.54168 17.1739ZM15.4584 17.1739C15.948 17.1739 16.375 16.7376 16.375 16.2913C16.375 15.7637 15.9584 15.3478 15.4584 15.3478C14.948 15.3478 14.5 15.7637 14.5 16.2913C14.5 16.7376 14.9584 17.1739 15.4584 17.1739Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TrelloGoldIcon: React.FunctionComponent<GlyphProps> = (props) => {
  const { testId, dangerous_className, size, color, label, block } = props;
  return (
    <Icon
      testId={testId}
      size={size}
      dangerous_className={dangerous_className}
      color={color}
      block={block}
      label={label || 'TrelloGoldIcon'}
      glyph={TrelloGoldIconGlyph}
    />
  );
};
